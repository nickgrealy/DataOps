apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin:'application'

group = 'org.dataops'
archivesBaseName = 'DataOps'
version = '1.4'
sourceCompatibility = 1.6
//mainClassName = 'org.codehaus.groovy.tools.shell.Main'

repositories {
    mavenCentral()
    ivy {
        name "ivyRepo"
        url "ivyRepo"
        layout "maven"
    }
}

uploadArchives {
    repositories {
        add project.repositories.ivyRepo
    }
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.7'
    // excel
    compile('org.apache.poi:poi-ooxml:3.10.1') {
        exclude(group: 'xml-apis', module: 'xml-apis')
    }
    compile('xerces:xercesImpl:2.9.1') {
        exclude(group: 'xml-apis', module: 'xml-apis')
        exclude(group: 'org.apache.xmlbeans', module: 'xmlbeans')
    }
    compile 'com.opencsv:opencsv:3.1' // csv
    compile 'com.h2database:h2:1.4.182' // db

    // groovysh
//    runtime("jline:jline:2.11") {
//        exclude(group: 'junit', module: 'junit')
//    }
//    runtime('commons-cli:commons-cli:1.2')
//
//    // soap
//    compile 'com.github.groovy-wslite:groovy-wslite:1.0.1'

    testCompile 'junit:junit:4.11' // groovytestcase
}

clean.doLast {
    ant.delete(includeemptydirs: true) { fileset(dir: '.', excludes: 'gradle.properties,build.gradle,src/**,.gradle/**') }
}

distZip.doLast {
    tasks.distUnzip.execute()
}

task distUnzip(type: Copy) {
    from zipTree(file("${buildDir}/distributions/${project.name}-${project.version}.zip"))
    into file("${buildDir}/distributions")
}