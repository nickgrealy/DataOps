apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin:'application'

group = 'org.dataops'
archivesBaseName = 'DataOps'
version = '1.4.1'
sourceCompatibility = 1.6
mainClassName = 'org.dataops.Main'

repositories {
    mavenCentral()
}

ext {
    applicationProperties = file("${project.buildDir}/tmp/app.properties")
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.7'
    compile('org.apache.poi:poi-ooxml:3.10.1') { // excel
        exclude(group: 'xml-apis', module: 'xml-apis')
    }
    compile('xerces:xercesImpl:2.9.1') {
        exclude(group: 'xml-apis', module: 'xml-apis')
        exclude(group: 'org.apache.xmlbeans', module: 'xmlbeans')
    }
    compile 'com.opencsv:opencsv:3.1' // csv
    compile 'com.h2database:h2:1.4.182' // db
    compile("jline:jline:2.11") { // groovysh
        exclude(group: 'junit', module: 'junit')
    }
    compile('commons-cli:commons-cli:1.2')

    testCompile 'junit:junit:4.11' // groovytestcase
}

clean.doLast {
    ant.delete(includeemptydirs: true) { fileset(dir: '.', excludes: 'gradle.properties,build.gradle,src/**,.gradle/**') }
}

jar {
    applicationProperties.parentFile.mkdirs()
    applicationProperties.delete()
    applicationProperties << "version=$version"
    from applicationProperties
}

distZip.doLast {
    tasks.distUnzip.execute()
}

task distUnzip(type: Copy) {
    from zipTree(file("${buildDir}/distributions/${project.name}-${project.version}.zip"))
    into file("${buildDir}/distributions")
}